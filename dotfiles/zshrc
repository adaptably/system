# --------------------------------------------
# General

alias ll='ls -al'
alias re='source ~/.zshrc'

# -------------------------------------------
# Navigation

development_path='~/Development'

alias 4s="cd $development_path/@4site"
alias ad="cd $development_path/@adaptably"
alias ds="cd $development_path/@adaptably/system"
alias dv="cd $development_path"
alias p="tmuxinator"

# --------------------------------------------
# Git

# Use `g` as a shortcut for `git`.
# With no arguments, do `git status`.
function g {
  if [[ $# > 0 ]]; then
    git "$@"
  else
    git status
  fi
}

# Check out a branch if there is one,
# otherwise check out files.
gc(){
  if [[ $# == 0 ]]; then
    local branch=$(select-git-branch)

    if [[ -n "$branch" ]]; then
      git checkout "$branch"
    fi

    true
  else
    git checkout "$@"
  fi
}

# Check out a Git branch.
function gb(){
  if [[ -z "$1" ]]; then
    echo "Provide a branch name." >&2
    return 1
  fi

  local branch="$1"
  local base=$2

  if [[ -n "$base" ]]; then
    git checkout -b "$branch" "$base"
  else
    git checkout -b "$branch"
  fi
}

# Amend with the previous commit message.
alias gam='g commit --amend -Chead'

# Simple aliases.
alias ga='g add'
alias gcm='g commit -m '
alias gd='g diff -- . ":!*package-lock.json"'
alias gdc='g diff --cached -- . ":!*package-lock.json"'
alias gl="g log --pretty='%C(magenta)%h%C(cyan)%d %C(white)%s'"
alias gp="g push"
alias gpl="g pull"

# Configure repositories for specific GitHub accounts.
# https://www.fabian-keller.de/blog/configuring-a-different-ssh-key-per-git-repository/
alias @4jrh='git config user.email "joshua@4sitestudios.com" && git config core.sshCommand "ssh -F ~/.ssh/config.github.4jrh"'
alias @adaptably='git config user.email "github@jrh.place" && git config core.sshCommand "ssh -F ~/.ssh/config.github.adaptably"'

# --------------------------------------------
# Search History

bindkey '^R' history-incremental-search-backward

# --------------------------------------------
# Utilities

# Use nvm.
export NVM_DIR="$HOME/.nvm"
[ -s "/opt/homebrew/opt/nvm/nvm.sh" ] && \. "/opt/homebrew/opt/nvm/nvm.sh"

# Use vim.
export EDITOR='vim'

# Use ripgrep for searching.
export FZF_DEFAULT_COMMAND='rg --hidden --files'

# Use docker.
path+="$HOME/.docker/bin"

# Use valet.
path+="$HOME/.composer/vendor/bin"

# Use pyenv.
path+="$HOME/.pyenv/bin"
eval "$(pyenv init -)"

# Use starship.
eval "$(starship init zsh)"

# --------------------------------------------
# Initialization

# Always use tmux.
if ! [ "$TERM_PROGRAM" = "tmux" ]; then
  tmux
fi
